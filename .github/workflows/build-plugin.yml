name: Build & Pack Plugin

on:
  workflow_call:
    inputs:
      plugin-name:
        required: true
        type: string
      plugin-version:
        required: true
        type: string
      shopware-version:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      plugin-name:
        required: true
        type: string
      plugin-version:
        required: true
        type: string
      shopware-version:
        required: true
        type: string

jobs:
  build:
    name: Shopware ${{ inputs.shopware-version }}
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Download Docker Image"
        run: |
          docker pull dockware/dev:${{ inputs.shopware-version }}

      - name: "Run Docker Container"
        shell: bash
        run: |
          docker run --rm --name shop -d dockware/dev:${{ inputs.shopware-version }}
          sleep 20
          docker logs shop

      - name: "Switch to production mode"
        shell: bash
        run: |
          docker exec shop bash -c 'sed -i "s/APP_ENV=dev/APP_ENV=prod/g" /var/www/html/.env' || true;

      - name: "Upload plugin into Docker"
        shell: bash
        run: |
          docker cp $(pwd)/. shop:/var/www/html/custom/plugins/${{ inputs.plugin-name }}
          docker exec shop bash -c 'sudo chown www-data:www-data /var/www/html/custom/plugins -R'

      - name: "Install composer dependencies"
        shell: bash
        run: |
          docker exec shop bash -c 'cd /var/www/html/custom/plugins/${{ inputs.plugin-name }} && php .github/bin/switch-composer.php dev'
          docker exec shop bash -c 'cd /var/www/html/custom/plugins/${{ inputs.plugin-name }} && composer install --no-dev'

      - name: "Install Plugin"
        shell: bash
        run: |
          docker exec shop bash -c 'cd /var/www/html && php bin/console plugin:refresh'
          docker exec shop bash -c 'cd /var/www/html && php bin/console plugin:install ${{ inputs.plugin-name }} --activate | true'
          docker exec shop bash -c 'cd /var/www/html && php bin/console plugin:refresh'

      - name: "Compile JS"
        shell: bash
        run: |
          docker exec shop bash -c 'cd /var/www/html && ./bin/build-storefront.sh'
          docker exec shop bash -c 'cd /var/www/html && ./bin/build-administration.sh'

      - name: "Pack Plugin ZIP"
        shell: bash
        run: |
          docker exec shop bash -c 'cd /var/www/html/custom/plugins/${{ inputs.plugin-name }} && php .github/bin/switch-composer.php prod'
          docker exec shop bash -c 'cd /var/www/html/custom/plugins && rm -rf ./.build/${{ inputs.plugin-name }}* && mkdir -p ./.build'
          docker exec shop bash -c 'cd /var/www/html/custom/plugins && zip -qq -r -0 ./.build/${{ inputs.plugin-name }}.zip ${{ inputs.plugin-name }}/ -x "*.git*" "*/.idea*" "*/tests*" "*/node_modules*" "*.DS_Store" "*/switch-composer.php" "*/phpunit.xml" "*/.phpunuhi.xml" "*/.infection.json" "*/phpunit.autoload.php" "*/.phpstan*" "*/.php_cs.php"'
          docker exec shop bash -c 'cd /var/www/html/custom/plugins/${{ inputs.plugin-name }} && php .github/bin/switch-composer.php dev'

      - name: "Download Plugin ZIP"
        shell: bash
        run: |
          mkdir ~/.build
          docker cp shop:/var/www/html/custom/plugins/.build/${{ inputs.plugin-name }}.zip ~/.build/${{ inputs.plugin-name }}-${{ inputs.plugin-version }}.zip

      - name: "Upload plugin zip artifact"
        uses: actions/upload-artifact@v3
        with:
          name: plugin
          retention-days: 5
          path: |
            ~/.build/*.zip